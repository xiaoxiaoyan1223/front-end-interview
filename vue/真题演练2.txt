#何时使用beforeDestory
解除自定义事件event.$off 自定义事件一定要解除，否则容易造成内存泄漏
清除定时器
解绑自定义Dom事件，如window scroll
#vux中action和mutation的区别
action可以处理异步 mutation不可以
mutation做原子操作也就是一个操作
action可以整理多个mutation

#Vue-router常用的路由模式
hash默认
H5 history(需要服务端支持)

#如何配置vue-router的异步加载
通过import

#用vnode描述一个dom结构

#监听data变化核心API
Object.defineProperty
以及深度监听、监听数组
有何缺点

#vue如何监听数组变化
Object.defineProperty不能监听数组变化
重新定义原型 重写pop push等方法实现监听
Proxy可以原生监听数组

#描述响应式原理
讲述监听data变化过程
组件渲染和更新的流程

#简述diff算法的过程
patch(elem,vnode)  patch(vnode,newVnode)
patchVnode addVnodes removeVnodes
uodateChildren(key的重要性)

#vue为何是异步渲染,$nextTick的作用
异步渲染(以及合并data修改)，以及提高渲染性能
$nextTick是在DOM更新完之后，触发回调

#vue常见的性能优化
合理使用v-if和v-show
合理使用computed
v-for时加key  避免和v-if一起使用
自定义事件和DOM事件要及时销毁
合理使用异步组件
合理使用keep-alive
data层级不要太深  深度监听需要一次性遍历完成
使用vue-loader在开发环境做模板编译(预编译)
webpack层级的优化
前端通用的性能优化比如懒加载
使用ssr