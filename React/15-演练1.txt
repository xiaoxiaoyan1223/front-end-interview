#组件之间如何通讯
父子组件Props
自定义事件
Redux和React

#JSX本质是什么
createElement
执行返回vnode

#context是什么，如何应用
父组件，向其他所有孙子组件传递信息
如一些简单的公共信息(语言、主题)
复杂的公共信息用redux

#SCU用途
性能优化
配合不可变值一起去使用，否则会出错

#rudux单项数据流
view->action->diapatch(Middleware->side Effects->action)->Reducer->State->view

#什么是纯函数
返回一个新值，没有副作用(不会偷偷修改其他值)
重点：不可变值
如arr1=arr.slice()

#React组件生命周期
单组件生命周期
父子组件生命周期
注意SCU

#React发起的ajax应该放在哪个生命周期上
componentDidMount

#渲染裂变为何使用key
必须使用且不能是index和Redom
diff算法中通过tag和key来判断，是否是sameNode
减少渲染次数 提高渲染性能

#表单组件
表单的值受state的控制
需要自行监听onChange，更新state
对比非受控组件

#何时使用异步组件
加载大组件
懒加载

#多个组件有公共逻辑，如何抽离
高阶组件HOC
Render Props

#Redux如何进行异步请求
使用action
使用redux-thunk

#react-router如何配置懒加载

#PureComponent有何区别
实现了浅比较的SCU
性能优化
要结合不可变值

#React事件和Dom事件的区别
所有事件都挂载到document上
event不是原生的，是SyntheticEvent合成事件对象
dispatchEvent

#React性能优化
渲染列表时加key
自定义事件 Dom事件及时销毁
合理使用异步组件
减少函数bind this次数
合理使用SCU和memo
合理使用Immutable.js
前端通用的性能优化 比如懒加载
使用ssr

